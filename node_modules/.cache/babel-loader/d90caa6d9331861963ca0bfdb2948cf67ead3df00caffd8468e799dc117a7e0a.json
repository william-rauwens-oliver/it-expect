{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/finance-flow/finance-flow/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TransactionForm from './components/TransactionForm';\nimport TransactionList from './components/TransactionList';\nimport Solde from './components/Solde';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [solde, setSolde] = useState(0);\n\n  // Fonction pour récupérer les transactions en fonction des filtres\n  const fetchTransactions = async (filters = {}) => {\n    try {\n      const response = await axios.get('http://localhost:8888/finance-flow/api.php', {\n        params: {\n          categorie: filters.categorie || '',\n          sous_categorie: filters.sous_categorie || '',\n          date: filters.date || '',\n          tri_montant: filters.tri_montant || ''\n        }\n      });\n      setTransactions(response.data);\n      calculateSolde(response.data);\n    } catch (error) {\n      console.error(\"Erreur lors de la récupération des transactions :\", error);\n    }\n  };\n\n  // Calculer le solde en fonction des transactions\n  const calculateSolde = transactions => {\n    const total = transactions.reduce((acc, tr) => acc + (tr.type === 'revenu' ? parseFloat(tr.montant) : -parseFloat(tr.montant)), 0);\n    setSolde(total);\n  };\n  useEffect(() => {\n    fetchTransactions();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Mon Gestionnaire de Budget\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Solde, {\n      solde: solde\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TransactionForm, {\n      onAddTransaction: () => fetchTransactions()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TransactionList, {\n      transactions: transactions,\n      onFilterChange: fetchTransactions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"Y/ugPSf/JfoAmI895xaYOwOokbY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","TransactionForm","TransactionList","Solde","jsxDEV","_jsxDEV","App","_s","transactions","setTransactions","solde","setSolde","fetchTransactions","filters","response","get","params","categorie","sous_categorie","date","tri_montant","data","calculateSolde","error","console","total","reduce","acc","tr","type","parseFloat","montant","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddTransaction","onFilterChange","_c","$RefreshReg$"],"sources":["/Applications/MAMP/htdocs/finance-flow/finance-flow/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TransactionForm from './components/TransactionForm';\nimport TransactionList from './components/TransactionList';\nimport Solde from './components/Solde';\n\nfunction App() {\n    const [transactions, setTransactions] = useState([]);\n    const [solde, setSolde] = useState(0);\n\n    // Fonction pour récupérer les transactions en fonction des filtres\n    const fetchTransactions = async (filters = {}) => {\n        try {\n            const response = await axios.get('http://localhost:8888/finance-flow/api.php', {\n                params: {\n                    categorie: filters.categorie || '',\n                    sous_categorie: filters.sous_categorie || '',\n                    date: filters.date || '',\n                    tri_montant: filters.tri_montant || ''\n                }\n            });\n            setTransactions(response.data);\n            calculateSolde(response.data);\n        } catch (error) {\n            console.error(\"Erreur lors de la récupération des transactions :\", error);\n        }\n    };\n\n    // Calculer le solde en fonction des transactions\n    const calculateSolde = (transactions) => {\n        const total = transactions.reduce((acc, tr) => acc + (tr.type === 'revenu' ? parseFloat(tr.montant) : -parseFloat(tr.montant)), 0);\n        setSolde(total);\n    };\n\n    useEffect(() => {\n        fetchTransactions();\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <header>\n                <h1>Mon Gestionnaire de Budget</h1>\n            </header>\n            <Solde solde={solde} />\n            <TransactionForm onAddTransaction={() => fetchTransactions()} />\n            <TransactionList transactions={transactions} onFilterChange={fetchTransactions} />\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}