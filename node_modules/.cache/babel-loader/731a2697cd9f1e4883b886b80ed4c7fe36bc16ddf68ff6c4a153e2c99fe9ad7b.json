{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/finance-flow/finance-flow/src/components/CategoryChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CategoryChart({\n  transactions,\n  budgets\n}) {\n  _s();\n  const [categoryNames, setCategoryNames] = useState({}); // Stocke les noms des catégories\n\n  useEffect(() => {\n    const fetchCategoryNames = async () => {\n      try {\n        const response = await axios.get('http://localhost:8888/finance-flow/finance-flow/src/api.php?getCategories=true');\n        const categories = response.data.categories || [];\n        const categoryMap = categories.reduce((acc, category) => {\n          acc[category.id] = category.nom; // Associe l'ID de catégorie à son nom\n          return acc;\n        }, {});\n        setCategoryNames(categoryMap);\n      } catch (error) {\n        console.error(\"Erreur lors de la récupération des noms des catégories :\", error);\n      }\n    };\n    fetchCategoryNames();\n  }, []);\n\n  // Calculer les données des dépenses par catégorie\n  const categoriesData = transactions.reduce((acc, transaction) => {\n    const categoryId = transaction.categorie_id;\n    acc[categoryId] = (acc[categoryId] || 0) + parseFloat(transaction.montant);\n    return acc;\n  }, {});\n\n  // Construire les labels avec les noms des catégories\n  const labels = Object.keys(categoriesData).map(categoryId => categoryNames[categoryId] || `Catégorie ${categoryId}`);\n  const data = Object.values(categoriesData);\n  const budgetData = Object.keys(categoriesData).map(categoryId => budgets[categoryId] || 0);\n  const chartData = {\n    labels: labels,\n    // Affiche les noms des catégories\n    datasets: [{\n      label: 'Dépenses',\n      data: data,\n      backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF']\n    }, {\n      label: 'Budgets',\n      data: budgetData,\n      backgroundColor: 'rgba(255, 99, 132, 0.2)',\n      borderColor: 'rgba(255, 99, 132, 1)'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"R\\xE9partition des D\\xE9penses par Cat\\xE9gorie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pie, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(CategoryChart, \"moYXsRTXl5PHjWKQvKBQhf2sRys=\");\n_c = CategoryChart;\nexport default CategoryChart;\nvar _c;\n$RefreshReg$(_c, \"CategoryChart\");","map":{"version":3,"names":["React","useEffect","useState","Pie","axios","jsxDEV","_jsxDEV","CategoryChart","transactions","budgets","_s","categoryNames","setCategoryNames","fetchCategoryNames","response","get","categories","data","categoryMap","reduce","acc","category","id","nom","error","console","categoriesData","transaction","categoryId","categorie_id","parseFloat","montant","labels","Object","keys","map","values","budgetData","chartData","datasets","label","backgroundColor","borderColor","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Applications/MAMP/htdocs/finance-flow/finance-flow/src/components/CategoryChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport axios from 'axios';\n\nfunction CategoryChart({ transactions, budgets }) {\n    const [categoryNames, setCategoryNames] = useState({}); // Stocke les noms des catégories\n\n    useEffect(() => {\n        const fetchCategoryNames = async () => {\n            try {\n                const response = await axios.get('http://localhost:8888/finance-flow/finance-flow/src/api.php?getCategories=true');\n                const categories = response.data.categories || [];\n                const categoryMap = categories.reduce((acc, category) => {\n                    acc[category.id] = category.nom; // Associe l'ID de catégorie à son nom\n                    return acc;\n                }, {});\n                setCategoryNames(categoryMap);\n            } catch (error) {\n                console.error(\"Erreur lors de la récupération des noms des catégories :\", error);\n            }\n        };\n\n        fetchCategoryNames();\n    }, []);\n\n    // Calculer les données des dépenses par catégorie\n    const categoriesData = transactions.reduce((acc, transaction) => {\n        const categoryId = transaction.categorie_id;\n        acc[categoryId] = (acc[categoryId] || 0) + parseFloat(transaction.montant);\n        return acc;\n    }, {});\n\n    // Construire les labels avec les noms des catégories\n    const labels = Object.keys(categoriesData).map(categoryId => categoryNames[categoryId] || `Catégorie ${categoryId}`);\n    const data = Object.values(categoriesData);\n\n    const budgetData = Object.keys(categoriesData).map(categoryId => budgets[categoryId] || 0);\n\n    const chartData = {\n        labels: labels, // Affiche les noms des catégories\n        datasets: [\n            {\n                label: 'Dépenses',\n                data: data,\n                backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF'],\n            },\n            {\n                label: 'Budgets',\n                data: budgetData,\n                backgroundColor: 'rgba(255, 99, 132, 0.2)',\n                borderColor: 'rgba(255, 99, 132, 1)',\n            },\n        ],\n    };\n\n    return (\n        <div>\n            <h2>Répartition des Dépenses par Catégorie</h2>\n            <Pie data={chartData} />\n        </div>\n    );\n}\n\nexport default CategoryChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}