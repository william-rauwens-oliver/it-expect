{"ast":null,"code":"import React,{useEffect,useState}from'react';import{Pie}from'react-chartjs-2';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function CategoryChart(_ref){let{transactions,budgets}=_ref;const[categoryNames,setCategoryNames]=useState({});// Stocke les noms des catégories\nuseEffect(()=>{const fetchCategoryNames=async()=>{try{const response=await axios.get('http://localhost:8888/finance-flow/finance-flow/src/api.php?getCategories=true');const categories=response.data.categories||[];const categoryMap=categories.reduce((acc,category)=>{acc[category.id]=category.nom;// Associe l'ID de catégorie à son nom\nreturn acc;},{});setCategoryNames(categoryMap);}catch(error){console.error(\"Erreur lors de la récupération des noms des catégories :\",error);}};fetchCategoryNames();},[]);// Calculer les données des dépenses par catégorie\nconst categoriesData=transactions.reduce((acc,transaction)=>{const categoryId=transaction.categorie_id;acc[categoryId]=(acc[categoryId]||0)+parseFloat(transaction.montant);return acc;},{});// Construire les labels avec les noms des catégories\nconst labels=Object.keys(categoriesData).map(categoryId=>categoryNames[categoryId]||`Catégorie ${categoryId}`);const data=Object.values(categoriesData);const budgetData=Object.keys(categoriesData).map(categoryId=>budgets[categoryId]||0);const chartData={labels:labels,// Affiche les noms des catégories\ndatasets:[{label:'Dépenses',data:data,backgroundColor:['#FF6384','#36A2EB','#FFCE56','#4BC0C0','#9966FF']},{label:'Budgets',data:budgetData,backgroundColor:'rgba(255, 99, 132, 0.2)',borderColor:'rgba(255, 99, 132, 1)'}]};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"R\\xE9partition des D\\xE9penses par Cat\\xE9gorie\"}),/*#__PURE__*/_jsx(Pie,{data:chartData})]});}export default CategoryChart;","map":{"version":3,"names":["React","useEffect","useState","Pie","axios","jsx","_jsx","jsxs","_jsxs","CategoryChart","_ref","transactions","budgets","categoryNames","setCategoryNames","fetchCategoryNames","response","get","categories","data","categoryMap","reduce","acc","category","id","nom","error","console","categoriesData","transaction","categoryId","categorie_id","parseFloat","montant","labels","Object","keys","map","values","budgetData","chartData","datasets","label","backgroundColor","borderColor","children"],"sources":["/Applications/MAMP/htdocs/finance-flow/finance-flow/src/components/CategoryChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport axios from 'axios';\n\nfunction CategoryChart({ transactions, budgets }) {\n    const [categoryNames, setCategoryNames] = useState({}); // Stocke les noms des catégories\n\n    useEffect(() => {\n        const fetchCategoryNames = async () => {\n            try {\n                const response = await axios.get('http://localhost:8888/finance-flow/finance-flow/src/api.php?getCategories=true');\n                const categories = response.data.categories || [];\n                const categoryMap = categories.reduce((acc, category) => {\n                    acc[category.id] = category.nom; // Associe l'ID de catégorie à son nom\n                    return acc;\n                }, {});\n                setCategoryNames(categoryMap);\n            } catch (error) {\n                console.error(\"Erreur lors de la récupération des noms des catégories :\", error);\n            }\n        };\n\n        fetchCategoryNames();\n    }, []);\n\n    // Calculer les données des dépenses par catégorie\n    const categoriesData = transactions.reduce((acc, transaction) => {\n        const categoryId = transaction.categorie_id;\n        acc[categoryId] = (acc[categoryId] || 0) + parseFloat(transaction.montant);\n        return acc;\n    }, {});\n\n    // Construire les labels avec les noms des catégories\n    const labels = Object.keys(categoriesData).map(categoryId => categoryNames[categoryId] || `Catégorie ${categoryId}`);\n    const data = Object.values(categoriesData);\n\n    const budgetData = Object.keys(categoriesData).map(categoryId => budgets[categoryId] || 0);\n\n    const chartData = {\n        labels: labels, // Affiche les noms des catégories\n        datasets: [\n            {\n                label: 'Dépenses',\n                data: data,\n                backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF'],\n            },\n            {\n                label: 'Budgets',\n                data: budgetData,\n                backgroundColor: 'rgba(255, 99, 132, 0.2)',\n                borderColor: 'rgba(255, 99, 132, 1)',\n            },\n        ],\n    };\n\n    return (\n        <div>\n            <h2>Répartition des Dépenses par Catégorie</h2>\n            <Pie data={chartData} />\n        </div>\n    );\n}\n\nexport default CategoryChart;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,GAAG,KAAQ,iBAAiB,CACrC,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,QAAS,CAAAC,aAAaA,CAAAC,IAAA,CAA4B,IAA3B,CAAEC,YAAY,CAAEC,OAAQ,CAAC,CAAAF,IAAA,CAC5C,KAAM,CAACG,aAAa,CAAEC,gBAAgB,CAAC,CAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAE;AAExDD,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAc,kBAAkB,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAZ,KAAK,CAACa,GAAG,CAAC,gFAAgF,CAAC,CAClH,KAAM,CAAAC,UAAU,CAAGF,QAAQ,CAACG,IAAI,CAACD,UAAU,EAAI,EAAE,CACjD,KAAM,CAAAE,WAAW,CAAGF,UAAU,CAACG,MAAM,CAAC,CAACC,GAAG,CAAEC,QAAQ,GAAK,CACrDD,GAAG,CAACC,QAAQ,CAACC,EAAE,CAAC,CAAGD,QAAQ,CAACE,GAAG,CAAE;AACjC,MAAO,CAAAH,GAAG,CACd,CAAC,CAAE,CAAC,CAAC,CAAC,CACNR,gBAAgB,CAACM,WAAW,CAAC,CACjC,CAAE,MAAOM,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,0DAA0D,CAAEA,KAAK,CAAC,CACpF,CACJ,CAAC,CAEDX,kBAAkB,CAAC,CAAC,CACxB,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAa,cAAc,CAAGjB,YAAY,CAACU,MAAM,CAAC,CAACC,GAAG,CAAEO,WAAW,GAAK,CAC7D,KAAM,CAAAC,UAAU,CAAGD,WAAW,CAACE,YAAY,CAC3CT,GAAG,CAACQ,UAAU,CAAC,CAAG,CAACR,GAAG,CAACQ,UAAU,CAAC,EAAI,CAAC,EAAIE,UAAU,CAACH,WAAW,CAACI,OAAO,CAAC,CAC1E,MAAO,CAAAX,GAAG,CACd,CAAC,CAAE,CAAC,CAAC,CAAC,CAEN;AACA,KAAM,CAAAY,MAAM,CAAGC,MAAM,CAACC,IAAI,CAACR,cAAc,CAAC,CAACS,GAAG,CAACP,UAAU,EAAIjB,aAAa,CAACiB,UAAU,CAAC,EAAI,aAAaA,UAAU,EAAE,CAAC,CACpH,KAAM,CAAAX,IAAI,CAAGgB,MAAM,CAACG,MAAM,CAACV,cAAc,CAAC,CAE1C,KAAM,CAAAW,UAAU,CAAGJ,MAAM,CAACC,IAAI,CAACR,cAAc,CAAC,CAACS,GAAG,CAACP,UAAU,EAAIlB,OAAO,CAACkB,UAAU,CAAC,EAAI,CAAC,CAAC,CAE1F,KAAM,CAAAU,SAAS,CAAG,CACdN,MAAM,CAAEA,MAAM,CAAE;AAChBO,QAAQ,CAAE,CACN,CACIC,KAAK,CAAE,UAAU,CACjBvB,IAAI,CAAEA,IAAI,CACVwB,eAAe,CAAE,CAAC,SAAS,CAAE,SAAS,CAAE,SAAS,CAAE,SAAS,CAAE,SAAS,CAC3E,CAAC,CACD,CACID,KAAK,CAAE,SAAS,CAChBvB,IAAI,CAAEoB,UAAU,CAChBI,eAAe,CAAE,yBAAyB,CAC1CC,WAAW,CAAE,uBACjB,CAAC,CAET,CAAC,CAED,mBACIpC,KAAA,QAAAqC,QAAA,eACIvC,IAAA,OAAAuC,QAAA,CAAI,iDAAsC,CAAI,CAAC,cAC/CvC,IAAA,CAACH,GAAG,EAACgB,IAAI,CAAEqB,SAAU,CAAE,CAAC,EACvB,CAAC,CAEd,CAEA,cAAe,CAAA/B,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}